#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebPeExcel")]
public partial class WPEDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertTotal(Total instance);
  partial void UpdateTotal(Total instance);
  partial void DeleteTotal(Total instance);
  #endregion
	
	public WPEDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebPeExcelConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public WPEDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WPEDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WPEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WPEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Total> Total
	{
		get
		{
			return this.GetTable<Total>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Total")]
public partial class Total : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _Grade;
	
	private string _Num;
	
	private string _Name;
	
	private string _Sex;
	
	private string _College;
	
	private string _Department;
	
	private string _Major;
	
	private string _ClassNum;
	
	private string _Nation;
	
	private string _Address;
	
	private string _IDNO;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnNumChanging(string value);
    partial void OnNumChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnCollegeChanging(string value);
    partial void OnCollegeChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnClassNumChanging(string value);
    partial void OnClassNumChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIDNOChanging(string value);
    partial void OnIDNOChanged();
    #endregion
	
	public Total()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
	public System.Nullable<int> Grade
	{
		get
		{
			return this._Grade;
		}
		set
		{
			if ((this._Grade != value))
			{
				this.OnGradeChanging(value);
				this.SendPropertyChanging();
				this._Grade = value;
				this.SendPropertyChanged("Grade");
				this.OnGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="NVarChar(50)")]
	public string Num
	{
		get
		{
			return this._Num;
		}
		set
		{
			if ((this._Num != value))
			{
				this.OnNumChanging(value);
				this.SendPropertyChanging();
				this._Num = value;
				this.SendPropertyChanged("Num");
				this.OnNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50)")]
	public string Sex
	{
		get
		{
			return this._Sex;
		}
		set
		{
			if ((this._Sex != value))
			{
				this.OnSexChanging(value);
				this.SendPropertyChanging();
				this._Sex = value;
				this.SendPropertyChanged("Sex");
				this.OnSexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_College", DbType="NVarChar(50)")]
	public string College
	{
		get
		{
			return this._College;
		}
		set
		{
			if ((this._College != value))
			{
				this.OnCollegeChanging(value);
				this.SendPropertyChanging();
				this._College = value;
				this.SendPropertyChanged("College");
				this.OnCollegeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
	public string Department
	{
		get
		{
			return this._Department;
		}
		set
		{
			if ((this._Department != value))
			{
				this.OnDepartmentChanging(value);
				this.SendPropertyChanging();
				this._Department = value;
				this.SendPropertyChanged("Department");
				this.OnDepartmentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(50)")]
	public string Major
	{
		get
		{
			return this._Major;
		}
		set
		{
			if ((this._Major != value))
			{
				this.OnMajorChanging(value);
				this.SendPropertyChanging();
				this._Major = value;
				this.SendPropertyChanged("Major");
				this.OnMajorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNum", DbType="NVarChar(50)")]
	public string ClassNum
	{
		get
		{
			return this._ClassNum;
		}
		set
		{
			if ((this._ClassNum != value))
			{
				this.OnClassNumChanging(value);
				this.SendPropertyChanging();
				this._ClassNum = value;
				this.SendPropertyChanged("ClassNum");
				this.OnClassNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(50)")]
	public string Nation
	{
		get
		{
			return this._Nation;
		}
		set
		{
			if ((this._Nation != value))
			{
				this.OnNationChanging(value);
				this.SendPropertyChanging();
				this._Nation = value;
				this.SendPropertyChanged("Nation");
				this.OnNationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNO", DbType="NVarChar(50)")]
	public string IDNO
	{
		get
		{
			return this._IDNO;
		}
		set
		{
			if ((this._IDNO != value))
			{
				this.OnIDNOChanging(value);
				this.SendPropertyChanging();
				this._IDNO = value;
				this.SendPropertyChanged("IDNO");
				this.OnIDNOChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
